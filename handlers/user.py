from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters import CommandStart, StateFilter
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

router = Router()

# ---------- –°–¢–ê–†–¢ ----------
@router.message(CommandStart())
async def start(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É üë©", callback_data="add_profile")],
        [InlineKeyboardButton(text="–ü—Ä–∞–≤–∏–ª–∞ ‚ÑπÔ∏è", callback_data="rules")]
    ])
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –¥–ª—è –ò—à–∏–º–±–∞—è –∏ —Å–æ—Å–µ–¥–Ω–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ (–°–∞–ª–∞–≤–∞—Ç, –°—Ç–µ—Ä–ª–∏—Ç–∞–º–∞–∫ –∏ –¥—Ä—É–≥–∏–µ) üíå",
        reply_markup=keyboard
    )

# ---------- –°–û–°–¢–û–Ø–ù–ò–Ø ----------
class ProfileStates(StatesGroup):
    name = State()
    age = State()
    gender = State()
    photo = State()

# ---------- –•–≠–ù–î–õ–ï–† –ù–ê –ö–ù–û–ü–ö–£ "–î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É" ----------
@router.callback_query(F.data == "add_profile")
async def add_profile_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(ProfileStates.name)

# ---------- –ò–ú–Ø ----------
@router.message(ProfileStates.name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(ProfileStates.age)

# ---------- –í–û–ó–†–ê–°–¢ ----------
@router.message(ProfileStates.age)
async def get_age(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏.")
        return
    await state.update_data(age=int(message.text))

    gender_kb = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text="–ü–∞—Ä–µ–Ω—å")],
        [KeyboardButton(text="–î–µ–≤—É—à–∫–∞")]
    ], resize_keyboard=True)

    await message.answer("–¢—ã –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞?", reply_markup=gender_kb)
    await state.set_state(ProfileStates.gender)

# ---------- –ü–û–õ ----------
@router.message(ProfileStates.gender)
async def get_gender(message: Message, state: FSMContext):
    if message.text not in ["–ü–∞—Ä–µ–Ω—å", "–î–µ–≤—É—à–∫–∞"]:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return
    await state.update_data(gender=message.text)
    await message.answer("–ü—Ä–∏—à–ª–∏ —Å–≤–æ—ë —Ñ–æ—Ç–æ üñº", reply_markup=ReplyKeyboardRemove())
    await state.set_state(ProfileStates.photo)

# ---------- –§–û–¢–û ----------
@router.message(ProfileStates.photo, F.photo)
async def get_photo(message: Message, state: FSMContext):
    photo_id = message.photo[-1].file_id
    await state.update_data(photo=photo_id)

    data = await state.get_data()
    caption = (
        f"–ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞:\n"
        f"–ò–º—è: {data['name']}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"–ü–æ–ª: {data['gender']}"
    )

    await message.answer_photo(photo=photo_id, caption=caption)
    await state.clear()


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ main.py
def register_user_handlers(dp):
    dp.include_router(router)
